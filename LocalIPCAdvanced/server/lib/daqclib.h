/****************************************************************************
**
** Namespace DAQCLib generated by dumpcpp v5.12.10 using
** C:\Qt\5.12.10\msvc2015_64\bin\dumpcpp.exe DAQC.ocx
** from the type library DAQC.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_DAQCLIB_H
#define QAX_DUMPCPP_DAQCLIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef DAQCLIB_EXPORT
#define DAQCLIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace DAQCLib {


class DAQCLIB_EXPORT _DDAQC : public QAxObject
{
public:
    _DDAQC(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ACUI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ACUI() const; //Returns the value of ACUI
    inline void SetACUI(int value); //Sets the value of the ACUI property

    /*
    Property APower

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int APower() const; //Returns the value of APower
    inline void SetAPower(int value); //Sets the value of the APower property

    /*
    Property AnatomyLine

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int AnatomyLine() const; //Returns the value of AnatomyLine
    inline void SetAnatomyLine(int value); //Sets the value of the AnatomyLine property

    /*
    Property BCDSynChro

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BCDSynChro() const; //Returns the value of BCDSynChro
    inline void SetBCDSynChro(int value); //Sets the value of the BCDSynChro property

    /*
    Property BDynamic

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BDynamic() const; //Returns the value of BDynamic
    inline void SetBDynamic(int value); //Sets the value of the BDynamic property

    /*
    Property BGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BGain() const; //Returns the value of BGain
    inline void SetBGain(int value); //Sets the value of the BGain property

    /*
    Property BGain2

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BGain2() const; //Returns the value of BGain2
    inline void SetBGain2(int value); //Sets the value of the BGain2 property

    /*
    Property BNoiseRej

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BNoiseRej() const; //Returns the value of BNoiseRej
    inline void SetBNoiseRej(int value); //Sets the value of the BNoiseRej property

    /*
    Property CBaseLine

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CBaseLine() const; //Returns the value of CBaseLine
    inline void SetCBaseLine(int value); //Sets the value of the CBaseLine property

    /*
    Property CDynamic

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CDynamic() const; //Returns the value of CDynamic
    inline void SetCDynamic(int value); //Sets the value of the CDynamic property

    /*
    Property CFreq

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double CFreq() const; //Returns the value of CFreq
    inline void SetCFreq(double value); //Sets the value of the CFreq property

    /*
    Property CGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CGain() const; //Returns the value of CGain
    inline void SetCGain(int value); //Sets the value of the CGain property

    /*
    Property CNoiseRej

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CNoiseRej() const; //Returns the value of CNoiseRej
    inline void SetCNoiseRej(int value); //Sets the value of the CNoiseRej property

    /*
    Property CPRF

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double CPRF() const; //Returns the value of CPRF
    inline void SetCPRF(double value); //Sets the value of the CPRF property

    /*
    Property CWallFilterFreq

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double CWallFilterFreq() const; //Returns the value of CWallFilterFreq
    inline void SetCWallFilterFreq(double value); //Sets the value of the CWallFilterFreq property

    /*
    Property ColorInvert

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline bool ColorInvert() const; //Returns the value of ColorInvert
    inline void SetColorInvert(bool value); //Sets the value of the ColorInvert property

    /*
    Property ColorPrior

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ColorPrior() const; //Returns the value of ColorPrior
    inline void SetColorPrior(int value); //Sets the value of the ColorPrior property

    /*
    Property CwdGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CwdGain() const; //Returns the value of CwdGain
    inline void SetCwdGain(int value); //Sets the value of the CwdGain property

    /*
    Property DBaseLine

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DBaseLine() const; //Returns the value of DBaseLine
    inline void SetDBaseLine(int value); //Sets the value of the DBaseLine property

    /*
    Property DDynamic

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DDynamic() const; //Returns the value of DDynamic
    inline void SetDDynamic(int value); //Sets the value of the DDynamic property

    /*
    Property DNoiseRej

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DNoiseRej() const; //Returns the value of DNoiseRej
    inline void SetDNoiseRej(int value); //Sets the value of the DNoiseRej property

    /*
    Property DPRF

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double DPRF() const; //Returns the value of DPRF
    inline void SetDPRF(double value); //Sets the value of the DPRF property

    /*
    Property DSoundVolum

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DSoundVolum() const; //Returns the value of DSoundVolum
    inline void SetDSoundVolum(int value); //Sets the value of the DSoundVolum property

    /*
    Property DSpeed

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DSpeed() const; //Returns the value of DSpeed
    inline void SetDSpeed(int value); //Sets the value of the DSpeed property

    /*
    Property DWallFilterFreq

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double DWallFilterFreq() const; //Returns the value of DWallFilterFreq
    inline void SetDWallFilterFreq(double value); //Sets the value of the DWallFilterFreq property

    /*
    Property Depth

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Depth() const; //Returns the value of Depth
    inline void SetDepth(int value); //Sets the value of the Depth property

    /*
    Property DirPwrGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DirPwrGain() const; //Returns the value of DirPwrGain
    inline void SetDirPwrGain(int value); //Sets the value of the DirPwrGain property

    /*
    Property DscCapture

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DscCapture() const; //Returns the value of DscCapture
    inline void SetDscCapture(int value); //Sets the value of the DscCapture property

    /*
    Property ExamTypeID

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ExamTypeID() const; //Returns the value of ExamTypeID
    inline void SetExamTypeID(int value); //Sets the value of the ExamTypeID property

    /*
    Property FrameRelation

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double FrameRelation() const; //Returns the value of FrameRelation
    inline void SetFrameRelation(double value); //Sets the value of the FrameRelation property

    /*
    Property Freq2

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double Freq2() const; //Returns the value of Freq2
    inline void SetFreq2(double value); //Sets the value of the Freq2 property

    /*
    Property Frequence

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double Frequence() const; //Returns the value of Frequence
    inline void SetFrequence(double value); //Sets the value of the Frequence property

    /*
    Property GetDscStop

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetDscStop() const; //Returns the value of GetDscStop
    inline void SetGetDscStop(int value); //Sets the value of the GetDscStop property

    /*
    Property ImageProcess

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ImageProcess() const; //Returns the value of ImageProcess
    inline void SetImageProcess(int value); //Sets the value of the ImageProcess property

    /*
    Property LavgRelation

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int LavgRelation() const; //Returns the value of LavgRelation
    inline void SetLavgRelation(int value); //Sets the value of the LavgRelation property

    /*
    Property LineDensity

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int LineDensity() const; //Returns the value of LineDensity
    inline void SetLineDensity(int value); //Sets the value of the LineDensity property

    /*
    Property MGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int MGain() const; //Returns the value of MGain
    inline void SetMGain(int value); //Sets the value of the MGain property

    /*
    Property MSpeed

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double MSpeed() const; //Returns the value of MSpeed
    inline void SetMSpeed(double value); //Sets the value of the MSpeed property

    /*
    Property PWDCompress

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PWDCompress() const; //Returns the value of PWDCompress
    inline void SetPWDCompress(int value); //Sets the value of the PWDCompress property

    /*
    Property PWDCorrectionAngle

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double PWDCorrectionAngle() const; //Returns the value of PWDCorrectionAngle
    inline void SetPWDCorrectionAngle(double value); //Sets the value of the PWDCorrectionAngle property

    /*
    Property PWDgateSize

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double PWDgateSize() const; //Returns the value of PWDgateSize
    inline void SetPWDgateSize(double value); //Sets the value of the PWDgateSize property

    /*
    Property PWDsampleDepth

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double PWDsampleDepth() const; //Returns the value of PWDsampleDepth
    inline void SetPWDsampleDepth(double value); //Sets the value of the PWDsampleDepth property

    /*
    Property PWDstartPos

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PWDstartPos() const; //Returns the value of PWDstartPos
    inline void SetPWDstartPos(int value); //Sets the value of the PWDstartPos property

    /*
    Property PersistenceColor

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PersistenceColor() const; //Returns the value of PersistenceColor
    inline void SetPersistenceColor(int value); //Sets the value of the PersistenceColor property

    /*
    Property ProbePOS

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ProbePOS() const; //Returns the value of ProbePOS
    inline void SetProbePOS(int value); //Sets the value of the ProbePOS property

    /*
    Property ProbeSEL

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ProbeSEL() const; //Returns the value of ProbeSEL
    inline void SetProbeSEL(int value); //Sets the value of the ProbeSEL property

    /*
    Property PwdGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PwdGain() const; //Returns the value of PwdGain
    inline void SetPwdGain(int value); //Sets the value of the PwdGain property

    /*
    Property PwdInvert

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline bool PwdInvert() const; //Returns the value of PwdInvert
    inline void SetPwdInvert(bool value); //Sets the value of the PwdInvert property

    /*
    Property PwrGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PwrGain() const; //Returns the value of PwrGain
    inline void SetPwrGain(int value); //Sets the value of the PwrGain property

    /*
    Property PwrMode

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PwrMode() const; //Returns the value of PwrMode
    inline void SetPwrMode(int value); //Sets the value of the PwrMode property

    /*
    Property ROISwingAngle

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ROISwingAngle() const; //Returns the value of ROISwingAngle
    inline void SetROISwingAngle(int value); //Sets the value of the ROISwingAngle property

    /*
    Property Radium

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double Radium() const; //Returns the value of Radium
    inline void SetRadium(double value); //Sets the value of the Radium property

    /*
    Property ResetProbe

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ResetProbe() const; //Returns the value of ResetProbe
    inline void SetResetProbe(int value); //Sets the value of the ResetProbe property

    /*
    Property ScanLine

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ScanLine() const; //Returns the value of ScanLine
    inline void SetScanLine(int value); //Sets the value of the ScanLine property

    /*
    Property THI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int THI() const; //Returns the value of THI
    inline void SetTHI(int value); //Sets the value of the THI property

    /*
    Property ZoomImg

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ZoomImg() const; //Returns the value of ZoomImg
    inline void SetZoomImg(int value); //Sets the value of the ZoomImg property

    /*
    Property bFocusLch

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int bFocusLch() const; //Returns the value of bFocusLch
    inline void setBFocusLch(int value); //Sets the value of the bFocusLch property

    /*
    Property cAutoTrace

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int cAutoTrace() const; //Returns the value of cAutoTrace
    inline void setCAutoTrace(int value); //Sets the value of the cAutoTrace property

    /*
    Property cFocusLch

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int cFocusLch() const; //Returns the value of cFocusLch
    inline void setCFocusLch(int value); //Sets the value of the cFocusLch property

    /*
    Property espin

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double espin() const; //Returns the value of espin
    inline void setEspin(double value); //Sets the value of the espin property

    /*
    Property imgExtend

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int imgExtend() const; //Returns the value of imgExtend
    inline void setImgExtend(int value); //Sets the value of the imgExtend property

    /*
    Property posneg

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int posneg() const; //Returns the value of posneg
    inline void setPosneg(int value); //Sets the value of the posneg property

    /*
    Property pwifBuffms

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int pwifBuffms() const; //Returns the value of pwifBuffms
    inline void setPwifBuffms(int value); //Sets the value of the pwifBuffms property

    /*
    Property scanFeature

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int scanFeature() const; //Returns the value of scanFeature
    inline void setScanFeature(int value); //Sets the value of the scanFeature property

    /*
    Property scanMode

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int scanMode() const; //Returns the value of scanMode
    inline void setScanMode(int value); //Sets the value of the scanMode property

    /*
    Property smooth

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int smooth() const; //Returns the value of smooth
    inline void setSmooth(int value); //Sets the value of the smooth property

    /*
    Method AboutBox

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void AboutBox();

    /*
    Method FacuiParams

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void FacuiParams(int pXh, int vAcui);

    /*
    Method GetColorDopplerROI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void GetColorDopplerROI(int startPos, int endPos, int startDepth, int endDepth);

    /*
    Method GetDepthSf

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetDepthSf();

    /*
    Method GetDscDIB

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetDscDIB();

    /*
    Method GetFPS

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double GetFPS();

    /*
    Method GetParameter

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double GetParameter(int id);

    /*
    Method GetProbeInfo

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetProbeInfo(int id);

    /*
    Method GetRegionPhysicalDelta

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline bool GetRegionPhysicalDelta(double& pDeltaX, double& pDeltaY);

    /*
    Method GetTGCPositions

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void GetTGCPositions(int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);

    /*
    Method GetpBMIInfo

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetpBMIInfo();

    /*
    Method GetpDIBits

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetpDIBits();

    /*
    Method Init

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Init(int inum);

    /*
    Method Mode2B

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Mode2B();

    /*
    Method Mode4B

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Mode4B(int wid);

    /*
    Method MoveColorROI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void MoveColorROI(int LeftRight, int UpDown);

    /*
    Method MoveROIColor

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void MoveROIColor(int x, int y);

    /*
    Method Palette

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Palette(int colorID, int bright, int ts);

    /*
    Method RealtimeEn

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int RealtimeEn(int en);

    /*
    Method SetColorDopplerROI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void SetColorDopplerROI(int startPos, int endPos, int startDepth, int endDepth);

    /*
    Method SetFlipH

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int SetFlipH(int isFlip);

    /*
    Method SetFlipV

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int SetFlipV(int isFlip);

    /*
    Method SetPwdAutoTrace

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int SetPwdAutoTrace(int nAuto);

    /*
    Method SetTGCPositions

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void SetTGCPositions(int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);

    /*
    Method SetiClear

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int SetiClear(int id);

    /*
    Method ZoomColorROI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void ZoomColorROI(int xDirection, int yDirection);

    /*
    Method fProbeType

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void fProbeType(int pbPort, int pbType);

    /*
    Method saveScuInitPara

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void saveScuInitPara();

    /*
    Method start

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline bool start();

    /*
    Method stop

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void stop();

    /*
    Method wifiEWM

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void wifiEWM(const QString& fptStr, const QString& htpStr);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _DDAQCEvents

// Actual coclasses
class DAQCLIB_EXPORT DAQC : public QAxWidget
{
public:
    DAQC(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl(QStringLiteral("{3cc226f8-710d-4f00-9134-8897c7141632}"));
    }

    /*
    Property ACUI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ACUI() const; //Returns the value of ACUI
    inline void SetACUI(int value); //Sets the value of the ACUI property

    /*
    Property APower

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int APower() const; //Returns the value of APower
    inline void SetAPower(int value); //Sets the value of the APower property

    /*
    Property AnatomyLine

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int AnatomyLine() const; //Returns the value of AnatomyLine
    inline void SetAnatomyLine(int value); //Sets the value of the AnatomyLine property

    /*
    Property BCDSynChro

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BCDSynChro() const; //Returns the value of BCDSynChro
    inline void SetBCDSynChro(int value); //Sets the value of the BCDSynChro property

    /*
    Property BDynamic

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BDynamic() const; //Returns the value of BDynamic
    inline void SetBDynamic(int value); //Sets the value of the BDynamic property

    /*
    Property BGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BGain() const; //Returns the value of BGain
    inline void SetBGain(int value); //Sets the value of the BGain property

    /*
    Property BGain2

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BGain2() const; //Returns the value of BGain2
    inline void SetBGain2(int value); //Sets the value of the BGain2 property

    /*
    Property BNoiseRej

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int BNoiseRej() const; //Returns the value of BNoiseRej
    inline void SetBNoiseRej(int value); //Sets the value of the BNoiseRej property

    /*
    Property CBaseLine

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CBaseLine() const; //Returns the value of CBaseLine
    inline void SetCBaseLine(int value); //Sets the value of the CBaseLine property

    /*
    Property CDynamic

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CDynamic() const; //Returns the value of CDynamic
    inline void SetCDynamic(int value); //Sets the value of the CDynamic property

    /*
    Property CFreq

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double CFreq() const; //Returns the value of CFreq
    inline void SetCFreq(double value); //Sets the value of the CFreq property

    /*
    Property CGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CGain() const; //Returns the value of CGain
    inline void SetCGain(int value); //Sets the value of the CGain property

    /*
    Property CNoiseRej

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CNoiseRej() const; //Returns the value of CNoiseRej
    inline void SetCNoiseRej(int value); //Sets the value of the CNoiseRej property

    /*
    Property CPRF

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double CPRF() const; //Returns the value of CPRF
    inline void SetCPRF(double value); //Sets the value of the CPRF property

    /*
    Property CWallFilterFreq

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double CWallFilterFreq() const; //Returns the value of CWallFilterFreq
    inline void SetCWallFilterFreq(double value); //Sets the value of the CWallFilterFreq property

    /*
    Property ColorInvert

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline bool ColorInvert() const; //Returns the value of ColorInvert
    inline void SetColorInvert(bool value); //Sets the value of the ColorInvert property

    /*
    Property ColorPrior

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ColorPrior() const; //Returns the value of ColorPrior
    inline void SetColorPrior(int value); //Sets the value of the ColorPrior property

    /*
    Property CwdGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int CwdGain() const; //Returns the value of CwdGain
    inline void SetCwdGain(int value); //Sets the value of the CwdGain property

    /*
    Property DBaseLine

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DBaseLine() const; //Returns the value of DBaseLine
    inline void SetDBaseLine(int value); //Sets the value of the DBaseLine property

    /*
    Property DDynamic

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DDynamic() const; //Returns the value of DDynamic
    inline void SetDDynamic(int value); //Sets the value of the DDynamic property

    /*
    Property DNoiseRej

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DNoiseRej() const; //Returns the value of DNoiseRej
    inline void SetDNoiseRej(int value); //Sets the value of the DNoiseRej property

    /*
    Property DPRF

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double DPRF() const; //Returns the value of DPRF
    inline void SetDPRF(double value); //Sets the value of the DPRF property

    /*
    Property DSoundVolum

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DSoundVolum() const; //Returns the value of DSoundVolum
    inline void SetDSoundVolum(int value); //Sets the value of the DSoundVolum property

    /*
    Property DSpeed

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DSpeed() const; //Returns the value of DSpeed
    inline void SetDSpeed(int value); //Sets the value of the DSpeed property

    /*
    Property DWallFilterFreq

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double DWallFilterFreq() const; //Returns the value of DWallFilterFreq
    inline void SetDWallFilterFreq(double value); //Sets the value of the DWallFilterFreq property

    /*
    Property Depth

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Depth() const; //Returns the value of Depth
    inline void SetDepth(int value); //Sets the value of the Depth property

    /*
    Property DirPwrGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DirPwrGain() const; //Returns the value of DirPwrGain
    inline void SetDirPwrGain(int value); //Sets the value of the DirPwrGain property

    /*
    Property DscCapture

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int DscCapture() const; //Returns the value of DscCapture
    inline void SetDscCapture(int value); //Sets the value of the DscCapture property

    /*
    Property ExamTypeID

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ExamTypeID() const; //Returns the value of ExamTypeID
    inline void SetExamTypeID(int value); //Sets the value of the ExamTypeID property

    /*
    Property FrameRelation

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double FrameRelation() const; //Returns the value of FrameRelation
    inline void SetFrameRelation(double value); //Sets the value of the FrameRelation property

    /*
    Property Freq2

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double Freq2() const; //Returns the value of Freq2
    inline void SetFreq2(double value); //Sets the value of the Freq2 property

    /*
    Property Frequence

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double Frequence() const; //Returns the value of Frequence
    inline void SetFrequence(double value); //Sets the value of the Frequence property

    /*
    Property GetDscStop

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetDscStop() const; //Returns the value of GetDscStop
    inline void SetGetDscStop(int value); //Sets the value of the GetDscStop property

    /*
    Property ImageProcess

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ImageProcess() const; //Returns the value of ImageProcess
    inline void SetImageProcess(int value); //Sets the value of the ImageProcess property

    /*
    Property LavgRelation

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int LavgRelation() const; //Returns the value of LavgRelation
    inline void SetLavgRelation(int value); //Sets the value of the LavgRelation property

    /*
    Property LineDensity

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int LineDensity() const; //Returns the value of LineDensity
    inline void SetLineDensity(int value); //Sets the value of the LineDensity property

    /*
    Property MGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int MGain() const; //Returns the value of MGain
    inline void SetMGain(int value); //Sets the value of the MGain property

    /*
    Property MSpeed

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double MSpeed() const; //Returns the value of MSpeed
    inline void SetMSpeed(double value); //Sets the value of the MSpeed property

    /*
    Property PWDCompress

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PWDCompress() const; //Returns the value of PWDCompress
    inline void SetPWDCompress(int value); //Sets the value of the PWDCompress property

    /*
    Property PWDCorrectionAngle

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double PWDCorrectionAngle() const; //Returns the value of PWDCorrectionAngle
    inline void SetPWDCorrectionAngle(double value); //Sets the value of the PWDCorrectionAngle property

    /*
    Property PWDgateSize

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double PWDgateSize() const; //Returns the value of PWDgateSize
    inline void SetPWDgateSize(double value); //Sets the value of the PWDgateSize property

    /*
    Property PWDsampleDepth

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double PWDsampleDepth() const; //Returns the value of PWDsampleDepth
    inline void SetPWDsampleDepth(double value); //Sets the value of the PWDsampleDepth property

    /*
    Property PWDstartPos

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PWDstartPos() const; //Returns the value of PWDstartPos
    inline void SetPWDstartPos(int value); //Sets the value of the PWDstartPos property

    /*
    Property PersistenceColor

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PersistenceColor() const; //Returns the value of PersistenceColor
    inline void SetPersistenceColor(int value); //Sets the value of the PersistenceColor property

    /*
    Property ProbePOS

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ProbePOS() const; //Returns the value of ProbePOS
    inline void SetProbePOS(int value); //Sets the value of the ProbePOS property

    /*
    Property ProbeSEL

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ProbeSEL() const; //Returns the value of ProbeSEL
    inline void SetProbeSEL(int value); //Sets the value of the ProbeSEL property

    /*
    Property PwdGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PwdGain() const; //Returns the value of PwdGain
    inline void SetPwdGain(int value); //Sets the value of the PwdGain property

    /*
    Property PwdInvert

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline bool PwdInvert() const; //Returns the value of PwdInvert
    inline void SetPwdInvert(bool value); //Sets the value of the PwdInvert property

    /*
    Property PwrGain

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PwrGain() const; //Returns the value of PwrGain
    inline void SetPwrGain(int value); //Sets the value of the PwrGain property

    /*
    Property PwrMode

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int PwrMode() const; //Returns the value of PwrMode
    inline void SetPwrMode(int value); //Sets the value of the PwrMode property

    /*
    Property ROISwingAngle

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ROISwingAngle() const; //Returns the value of ROISwingAngle
    inline void SetROISwingAngle(int value); //Sets the value of the ROISwingAngle property

    /*
    Property Radium

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double Radium() const; //Returns the value of Radium
    inline void SetRadium(double value); //Sets the value of the Radium property

    /*
    Property ResetProbe

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ResetProbe() const; //Returns the value of ResetProbe
    inline void SetResetProbe(int value); //Sets the value of the ResetProbe property

    /*
    Property ScanLine

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ScanLine() const; //Returns the value of ScanLine
    inline void SetScanLine(int value); //Sets the value of the ScanLine property

    /*
    Property THI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int THI() const; //Returns the value of THI
    inline void SetTHI(int value); //Sets the value of the THI property

    /*
    Property ZoomImg

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int ZoomImg() const; //Returns the value of ZoomImg
    inline void SetZoomImg(int value); //Sets the value of the ZoomImg property

    /*
    Property bFocusLch

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int bFocusLch() const; //Returns the value of bFocusLch
    inline void setBFocusLch(int value); //Sets the value of the bFocusLch property

    /*
    Property cAutoTrace

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int cAutoTrace() const; //Returns the value of cAutoTrace
    inline void setCAutoTrace(int value); //Sets the value of the cAutoTrace property

    /*
    Property cFocusLch

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int cFocusLch() const; //Returns the value of cFocusLch
    inline void setCFocusLch(int value); //Sets the value of the cFocusLch property

    /*
    Property espin

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double espin() const; //Returns the value of espin
    inline void setEspin(double value); //Sets the value of the espin property

    /*
    Property imgExtend

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int imgExtend() const; //Returns the value of imgExtend
    inline void setImgExtend(int value); //Sets the value of the imgExtend property

    /*
    Property posneg

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int posneg() const; //Returns the value of posneg
    inline void setPosneg(int value); //Sets the value of the posneg property

    /*
    Property pwifBuffms

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int pwifBuffms() const; //Returns the value of pwifBuffms
    inline void setPwifBuffms(int value); //Sets the value of the pwifBuffms property

    /*
    Property scanFeature

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int scanFeature() const; //Returns the value of scanFeature
    inline void setScanFeature(int value); //Sets the value of the scanFeature property

    /*
    Property scanMode

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int scanMode() const; //Returns the value of scanMode
    inline void setScanMode(int value); //Sets the value of the scanMode property

    /*
    Property smooth

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int smooth() const; //Returns the value of smooth
    inline void setSmooth(int value); //Sets the value of the smooth property

    /*
    Method AboutBox

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void AboutBox();

    /*
    Method FacuiParams

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void FacuiParams(int pXh, int vAcui);

    /*
    Method GetColorDopplerROI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void GetColorDopplerROI(int startPos, int endPos, int startDepth, int endDepth);

    /*
    Method GetDepthSf

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetDepthSf();

    /*
    Method GetDscDIB

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetDscDIB();

    /*
    Method GetFPS

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double GetFPS();

    /*
    Method GetParameter

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline double GetParameter(int id);

    /*
    Method GetProbeInfo

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetProbeInfo(int id);

    /*
    Method GetRegionPhysicalDelta

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline bool GetRegionPhysicalDelta(double& pDeltaX, double& pDeltaY);

    /*
    Method GetTGCPositions

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void GetTGCPositions(int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);

    /*
    Method GetpBMIInfo

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetpBMIInfo();

    /*
    Method GetpDIBits

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int GetpDIBits();

    /*
    Method Init

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Init(int inum);

    /*
    Method Mode2B

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Mode2B();

    /*
    Method Mode4B

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Mode4B(int wid);

    /*
    Method MoveColorROI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void MoveColorROI(int LeftRight, int UpDown);

    /*
    Method MoveROIColor

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void MoveROIColor(int x, int y);

    /*
    Method Palette

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int Palette(int colorID, int bright, int ts);

    /*
    Method RealtimeEn

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int RealtimeEn(int en);

    /*
    Method SetColorDopplerROI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void SetColorDopplerROI(int startPos, int endPos, int startDepth, int endDepth);

    /*
    Method SetFlipH

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int SetFlipH(int isFlip);

    /*
    Method SetFlipV

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int SetFlipV(int isFlip);

    /*
    Method SetPwdAutoTrace

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int SetPwdAutoTrace(int nAuto);

    /*
    Method SetTGCPositions

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void SetTGCPositions(int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);

    /*
    Method SetiClear

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline int SetiClear(int id);

    /*
    Method ZoomColorROI

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void ZoomColorROI(int xDirection, int yDirection);

    /*
    Method fProbeType

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void fProbeType(int pbPort, int pbType);

    /*
    Method saveScuInitPara

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void saveScuInitPara();

    /*
    Method start

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline bool start();

    /*
    Method stop

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void stop();

    /*
    Method wifiEWM

    For more information, see help context 0 in D:\Data\Dll\DAQC.hlp.
    */
    inline void wifiEWM(const QString& fptStr, const QString& htpStr);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_DAQCLIB_NOINLINES
inline int _DDAQC::ACUI() const
{
    QVariant qax_result = property("ACUI");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetACUI(int value){ setProperty("ACUI", QVariant(value)); }

inline int _DDAQC::APower() const
{
    QVariant qax_result = property("APower");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetAPower(int value){ setProperty("APower", QVariant(value)); }

inline int _DDAQC::AnatomyLine() const
{
    QVariant qax_result = property("AnatomyLine");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetAnatomyLine(int value){ setProperty("AnatomyLine", QVariant(value)); }

inline int _DDAQC::BCDSynChro() const
{
    QVariant qax_result = property("BCDSynChro");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetBCDSynChro(int value){ setProperty("BCDSynChro", QVariant(value)); }

inline int _DDAQC::BDynamic() const
{
    QVariant qax_result = property("BDynamic");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetBDynamic(int value){ setProperty("BDynamic", QVariant(value)); }

inline int _DDAQC::BGain() const
{
    QVariant qax_result = property("BGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetBGain(int value){ setProperty("BGain", QVariant(value)); }

inline int _DDAQC::BGain2() const
{
    QVariant qax_result = property("BGain2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetBGain2(int value){ setProperty("BGain2", QVariant(value)); }

inline int _DDAQC::BNoiseRej() const
{
    QVariant qax_result = property("BNoiseRej");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetBNoiseRej(int value){ setProperty("BNoiseRej", QVariant(value)); }

inline int _DDAQC::CBaseLine() const
{
    QVariant qax_result = property("CBaseLine");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetCBaseLine(int value){ setProperty("CBaseLine", QVariant(value)); }

inline int _DDAQC::CDynamic() const
{
    QVariant qax_result = property("CDynamic");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetCDynamic(int value){ setProperty("CDynamic", QVariant(value)); }

inline double _DDAQC::CFreq() const
{
    QVariant qax_result = property("CFreq");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetCFreq(double value){ setProperty("CFreq", QVariant(value)); }

inline int _DDAQC::CGain() const
{
    QVariant qax_result = property("CGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetCGain(int value){ setProperty("CGain", QVariant(value)); }

inline int _DDAQC::CNoiseRej() const
{
    QVariant qax_result = property("CNoiseRej");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetCNoiseRej(int value){ setProperty("CNoiseRej", QVariant(value)); }

inline double _DDAQC::CPRF() const
{
    QVariant qax_result = property("CPRF");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetCPRF(double value){ setProperty("CPRF", QVariant(value)); }

inline double _DDAQC::CWallFilterFreq() const
{
    QVariant qax_result = property("CWallFilterFreq");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetCWallFilterFreq(double value){ setProperty("CWallFilterFreq", QVariant(value)); }

inline bool _DDAQC::ColorInvert() const
{
    QVariant qax_result = property("ColorInvert");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DDAQC::SetColorInvert(bool value){ setProperty("ColorInvert", QVariant(value)); }

inline int _DDAQC::ColorPrior() const
{
    QVariant qax_result = property("ColorPrior");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetColorPrior(int value){ setProperty("ColorPrior", QVariant(value)); }

inline int _DDAQC::CwdGain() const
{
    QVariant qax_result = property("CwdGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetCwdGain(int value){ setProperty("CwdGain", QVariant(value)); }

inline int _DDAQC::DBaseLine() const
{
    QVariant qax_result = property("DBaseLine");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetDBaseLine(int value){ setProperty("DBaseLine", QVariant(value)); }

inline int _DDAQC::DDynamic() const
{
    QVariant qax_result = property("DDynamic");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetDDynamic(int value){ setProperty("DDynamic", QVariant(value)); }

inline int _DDAQC::DNoiseRej() const
{
    QVariant qax_result = property("DNoiseRej");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetDNoiseRej(int value){ setProperty("DNoiseRej", QVariant(value)); }

inline double _DDAQC::DPRF() const
{
    QVariant qax_result = property("DPRF");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetDPRF(double value){ setProperty("DPRF", QVariant(value)); }

inline int _DDAQC::DSoundVolum() const
{
    QVariant qax_result = property("DSoundVolum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetDSoundVolum(int value){ setProperty("DSoundVolum", QVariant(value)); }

inline int _DDAQC::DSpeed() const
{
    QVariant qax_result = property("DSpeed");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetDSpeed(int value){ setProperty("DSpeed", QVariant(value)); }

inline double _DDAQC::DWallFilterFreq() const
{
    QVariant qax_result = property("DWallFilterFreq");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetDWallFilterFreq(double value){ setProperty("DWallFilterFreq", QVariant(value)); }

inline int _DDAQC::Depth() const
{
    QVariant qax_result = property("Depth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetDepth(int value){ setProperty("Depth", QVariant(value)); }

inline int _DDAQC::DirPwrGain() const
{
    QVariant qax_result = property("DirPwrGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetDirPwrGain(int value){ setProperty("DirPwrGain", QVariant(value)); }

inline int _DDAQC::DscCapture() const
{
    QVariant qax_result = property("DscCapture");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetDscCapture(int value){ setProperty("DscCapture", QVariant(value)); }

inline int _DDAQC::ExamTypeID() const
{
    QVariant qax_result = property("ExamTypeID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetExamTypeID(int value){ setProperty("ExamTypeID", QVariant(value)); }

inline double _DDAQC::FrameRelation() const
{
    QVariant qax_result = property("FrameRelation");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetFrameRelation(double value){ setProperty("FrameRelation", QVariant(value)); }

inline double _DDAQC::Freq2() const
{
    QVariant qax_result = property("Freq2");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetFreq2(double value){ setProperty("Freq2", QVariant(value)); }

inline double _DDAQC::Frequence() const
{
    QVariant qax_result = property("Frequence");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetFrequence(double value){ setProperty("Frequence", QVariant(value)); }

inline int _DDAQC::GetDscStop() const
{
    QVariant qax_result = property("GetDscStop");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetGetDscStop(int value){ setProperty("GetDscStop", QVariant(value)); }

inline int _DDAQC::ImageProcess() const
{
    QVariant qax_result = property("ImageProcess");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetImageProcess(int value){ setProperty("ImageProcess", QVariant(value)); }

inline int _DDAQC::LavgRelation() const
{
    QVariant qax_result = property("LavgRelation");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetLavgRelation(int value){ setProperty("LavgRelation", QVariant(value)); }

inline int _DDAQC::LineDensity() const
{
    QVariant qax_result = property("LineDensity");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetLineDensity(int value){ setProperty("LineDensity", QVariant(value)); }

inline int _DDAQC::MGain() const
{
    QVariant qax_result = property("MGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetMGain(int value){ setProperty("MGain", QVariant(value)); }

inline double _DDAQC::MSpeed() const
{
    QVariant qax_result = property("MSpeed");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetMSpeed(double value){ setProperty("MSpeed", QVariant(value)); }

inline int _DDAQC::PWDCompress() const
{
    QVariant qax_result = property("PWDCompress");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetPWDCompress(int value){ setProperty("PWDCompress", QVariant(value)); }

inline double _DDAQC::PWDCorrectionAngle() const
{
    QVariant qax_result = property("PWDCorrectionAngle");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetPWDCorrectionAngle(double value){ setProperty("PWDCorrectionAngle", QVariant(value)); }

inline double _DDAQC::PWDgateSize() const
{
    QVariant qax_result = property("PWDgateSize");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetPWDgateSize(double value){ setProperty("PWDgateSize", QVariant(value)); }

inline double _DDAQC::PWDsampleDepth() const
{
    QVariant qax_result = property("PWDsampleDepth");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetPWDsampleDepth(double value){ setProperty("PWDsampleDepth", QVariant(value)); }

inline int _DDAQC::PWDstartPos() const
{
    QVariant qax_result = property("PWDstartPos");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetPWDstartPos(int value){ setProperty("PWDstartPos", QVariant(value)); }

inline int _DDAQC::PersistenceColor() const
{
    QVariant qax_result = property("PersistenceColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetPersistenceColor(int value){ setProperty("PersistenceColor", QVariant(value)); }

inline int _DDAQC::ProbePOS() const
{
    QVariant qax_result = property("ProbePOS");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetProbePOS(int value){ setProperty("ProbePOS", QVariant(value)); }

inline int _DDAQC::ProbeSEL() const
{
    QVariant qax_result = property("ProbeSEL");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetProbeSEL(int value){ setProperty("ProbeSEL", QVariant(value)); }

inline int _DDAQC::PwdGain() const
{
    QVariant qax_result = property("PwdGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetPwdGain(int value){ setProperty("PwdGain", QVariant(value)); }

inline bool _DDAQC::PwdInvert() const
{
    QVariant qax_result = property("PwdInvert");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DDAQC::SetPwdInvert(bool value){ setProperty("PwdInvert", QVariant(value)); }

inline int _DDAQC::PwrGain() const
{
    QVariant qax_result = property("PwrGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetPwrGain(int value){ setProperty("PwrGain", QVariant(value)); }

inline int _DDAQC::PwrMode() const
{
    QVariant qax_result = property("PwrMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetPwrMode(int value){ setProperty("PwrMode", QVariant(value)); }

inline int _DDAQC::ROISwingAngle() const
{
    QVariant qax_result = property("ROISwingAngle");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetROISwingAngle(int value){ setProperty("ROISwingAngle", QVariant(value)); }

inline double _DDAQC::Radium() const
{
    QVariant qax_result = property("Radium");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::SetRadium(double value){ setProperty("Radium", QVariant(value)); }

inline int _DDAQC::ResetProbe() const
{
    QVariant qax_result = property("ResetProbe");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetResetProbe(int value){ setProperty("ResetProbe", QVariant(value)); }

inline int _DDAQC::ScanLine() const
{
    QVariant qax_result = property("ScanLine");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetScanLine(int value){ setProperty("ScanLine", QVariant(value)); }

inline int _DDAQC::THI() const
{
    QVariant qax_result = property("THI");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetTHI(int value){ setProperty("THI", QVariant(value)); }

inline int _DDAQC::ZoomImg() const
{
    QVariant qax_result = property("ZoomImg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::SetZoomImg(int value){ setProperty("ZoomImg", QVariant(value)); }

inline int _DDAQC::bFocusLch() const
{
    QVariant qax_result = property("bFocusLch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setBFocusLch(int value){ setProperty("bFocusLch", QVariant(value)); }

inline int _DDAQC::cAutoTrace() const
{
    QVariant qax_result = property("cAutoTrace");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setCAutoTrace(int value){ setProperty("cAutoTrace", QVariant(value)); }

inline int _DDAQC::cFocusLch() const
{
    QVariant qax_result = property("cFocusLch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setCFocusLch(int value){ setProperty("cFocusLch", QVariant(value)); }

inline double _DDAQC::espin() const
{
    QVariant qax_result = property("espin");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DDAQC::setEspin(double value){ setProperty("espin", QVariant(value)); }

inline int _DDAQC::imgExtend() const
{
    QVariant qax_result = property("imgExtend");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setImgExtend(int value){ setProperty("imgExtend", QVariant(value)); }

inline int _DDAQC::posneg() const
{
    QVariant qax_result = property("posneg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setPosneg(int value){ setProperty("posneg", QVariant(value)); }

inline int _DDAQC::pwifBuffms() const
{
    QVariant qax_result = property("pwifBuffms");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setPwifBuffms(int value){ setProperty("pwifBuffms", QVariant(value)); }

inline int _DDAQC::scanFeature() const
{
    QVariant qax_result = property("scanFeature");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setScanFeature(int value){ setProperty("scanFeature", QVariant(value)); }

inline int _DDAQC::scanMode() const
{
    QVariant qax_result = property("scanMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setScanMode(int value){ setProperty("scanMode", QVariant(value)); }

inline int _DDAQC::smooth() const
{
    QVariant qax_result = property("smooth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDAQC::setSmooth(int value){ setProperty("smooth", QVariant(value)); }

inline void _DDAQC::AboutBox()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _DDAQC::FacuiParams(int pXh, int vAcui)
{
    void *_a[] = {0, (void*)&pXh, (void*)&vAcui};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _DDAQC::GetColorDopplerROI(int startPos, int endPos, int startDepth, int endDepth)
{
    void *_a[] = {0, (void*)&startPos, (void*)&endPos, (void*)&startDepth, (void*)&endDepth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline int _DDAQC::GetDepthSf()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int _DDAQC::GetDscDIB()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline double _DDAQC::GetFPS()
{
    double qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline double _DDAQC::GetParameter(int id)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int _DDAQC::GetProbeInfo(int id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline bool _DDAQC::GetRegionPhysicalDelta(double& pDeltaX, double& pDeltaY)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDeltaX, (void*)&pDeltaY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void _DDAQC::GetTGCPositions(int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8)
{
    void *_a[] = {0, (void*)&p1, (void*)&p2, (void*)&p3, (void*)&p4, (void*)&p5, (void*)&p6, (void*)&p7, (void*)&p8};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline int _DDAQC::GetpBMIInfo()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int _DDAQC::GetpDIBits()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int _DDAQC::Init(int inum)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&inum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int _DDAQC::Mode2B()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int _DDAQC::Mode4B(int wid)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&wid};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void _DDAQC::MoveColorROI(int LeftRight, int UpDown)
{
    void *_a[] = {0, (void*)&LeftRight, (void*)&UpDown};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _DDAQC::MoveROIColor(int x, int y)
{
    void *_a[] = {0, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline int _DDAQC::Palette(int colorID, int bright, int ts)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&colorID, (void*)&bright, (void*)&ts};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int _DDAQC::RealtimeEn(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline void _DDAQC::SetColorDopplerROI(int startPos, int endPos, int startDepth, int endDepth)
{
    void *_a[] = {0, (void*)&startPos, (void*)&endPos, (void*)&startDepth, (void*)&endDepth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline int _DDAQC::SetFlipH(int isFlip)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&isFlip};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline int _DDAQC::SetFlipV(int isFlip)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&isFlip};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline int _DDAQC::SetPwdAutoTrace(int nAuto)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nAuto};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline void _DDAQC::SetTGCPositions(int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8)
{
    void *_a[] = {0, (void*)&p1, (void*)&p2, (void*)&p3, (void*)&p4, (void*)&p5, (void*)&p6, (void*)&p7, (void*)&p8};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
}

inline int _DDAQC::SetiClear(int id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
    return qax_result;
}

inline void _DDAQC::ZoomColorROI(int xDirection, int yDirection)
{
    void *_a[] = {0, (void*)&xDirection, (void*)&yDirection};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
}

inline void _DDAQC::fProbeType(int pbPort, int pbType)
{
    void *_a[] = {0, (void*)&pbPort, (void*)&pbType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
}

inline void _DDAQC::saveScuInitPara()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
}

inline bool _DDAQC::start()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
    return qax_result;
}

inline void _DDAQC::stop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
}

inline void _DDAQC::wifiEWM(const QString& fptStr, const QString& htpStr)
{
    void *_a[] = {0, (void*)&fptStr, (void*)&htpStr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
}


inline int DAQC::ACUI() const
{
    QVariant qax_result = property("ACUI");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetACUI(int value){ setProperty("ACUI", QVariant(value)); }

inline int DAQC::APower() const
{
    QVariant qax_result = property("APower");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetAPower(int value){ setProperty("APower", QVariant(value)); }

inline int DAQC::AnatomyLine() const
{
    QVariant qax_result = property("AnatomyLine");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetAnatomyLine(int value){ setProperty("AnatomyLine", QVariant(value)); }

inline int DAQC::BCDSynChro() const
{
    QVariant qax_result = property("BCDSynChro");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetBCDSynChro(int value){ setProperty("BCDSynChro", QVariant(value)); }

inline int DAQC::BDynamic() const
{
    QVariant qax_result = property("BDynamic");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetBDynamic(int value){ setProperty("BDynamic", QVariant(value)); }

inline int DAQC::BGain() const
{
    QVariant qax_result = property("BGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetBGain(int value){ setProperty("BGain", QVariant(value)); }

inline int DAQC::BGain2() const
{
    QVariant qax_result = property("BGain2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetBGain2(int value){ setProperty("BGain2", QVariant(value)); }

inline int DAQC::BNoiseRej() const
{
    QVariant qax_result = property("BNoiseRej");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetBNoiseRej(int value){ setProperty("BNoiseRej", QVariant(value)); }

inline int DAQC::CBaseLine() const
{
    QVariant qax_result = property("CBaseLine");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetCBaseLine(int value){ setProperty("CBaseLine", QVariant(value)); }

inline int DAQC::CDynamic() const
{
    QVariant qax_result = property("CDynamic");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetCDynamic(int value){ setProperty("CDynamic", QVariant(value)); }

inline double DAQC::CFreq() const
{
    QVariant qax_result = property("CFreq");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetCFreq(double value){ setProperty("CFreq", QVariant(value)); }

inline int DAQC::CGain() const
{
    QVariant qax_result = property("CGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetCGain(int value){ setProperty("CGain", QVariant(value)); }

inline int DAQC::CNoiseRej() const
{
    QVariant qax_result = property("CNoiseRej");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetCNoiseRej(int value){ setProperty("CNoiseRej", QVariant(value)); }

inline double DAQC::CPRF() const
{
    QVariant qax_result = property("CPRF");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetCPRF(double value){ setProperty("CPRF", QVariant(value)); }

inline double DAQC::CWallFilterFreq() const
{
    QVariant qax_result = property("CWallFilterFreq");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetCWallFilterFreq(double value){ setProperty("CWallFilterFreq", QVariant(value)); }

inline bool DAQC::ColorInvert() const
{
    QVariant qax_result = property("ColorInvert");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DAQC::SetColorInvert(bool value){ setProperty("ColorInvert", QVariant(value)); }

inline int DAQC::ColorPrior() const
{
    QVariant qax_result = property("ColorPrior");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetColorPrior(int value){ setProperty("ColorPrior", QVariant(value)); }

inline int DAQC::CwdGain() const
{
    QVariant qax_result = property("CwdGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetCwdGain(int value){ setProperty("CwdGain", QVariant(value)); }

inline int DAQC::DBaseLine() const
{
    QVariant qax_result = property("DBaseLine");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetDBaseLine(int value){ setProperty("DBaseLine", QVariant(value)); }

inline int DAQC::DDynamic() const
{
    QVariant qax_result = property("DDynamic");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetDDynamic(int value){ setProperty("DDynamic", QVariant(value)); }

inline int DAQC::DNoiseRej() const
{
    QVariant qax_result = property("DNoiseRej");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetDNoiseRej(int value){ setProperty("DNoiseRej", QVariant(value)); }

inline double DAQC::DPRF() const
{
    QVariant qax_result = property("DPRF");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetDPRF(double value){ setProperty("DPRF", QVariant(value)); }

inline int DAQC::DSoundVolum() const
{
    QVariant qax_result = property("DSoundVolum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetDSoundVolum(int value){ setProperty("DSoundVolum", QVariant(value)); }

inline int DAQC::DSpeed() const
{
    QVariant qax_result = property("DSpeed");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetDSpeed(int value){ setProperty("DSpeed", QVariant(value)); }

inline double DAQC::DWallFilterFreq() const
{
    QVariant qax_result = property("DWallFilterFreq");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetDWallFilterFreq(double value){ setProperty("DWallFilterFreq", QVariant(value)); }

inline int DAQC::Depth() const
{
    QVariant qax_result = property("Depth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetDepth(int value){ setProperty("Depth", QVariant(value)); }

inline int DAQC::DirPwrGain() const
{
    QVariant qax_result = property("DirPwrGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetDirPwrGain(int value){ setProperty("DirPwrGain", QVariant(value)); }

inline int DAQC::DscCapture() const
{
    QVariant qax_result = property("DscCapture");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetDscCapture(int value){ setProperty("DscCapture", QVariant(value)); }

inline int DAQC::ExamTypeID() const
{
    QVariant qax_result = property("ExamTypeID");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetExamTypeID(int value){ setProperty("ExamTypeID", QVariant(value)); }

inline double DAQC::FrameRelation() const
{
    QVariant qax_result = property("FrameRelation");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetFrameRelation(double value){ setProperty("FrameRelation", QVariant(value)); }

inline double DAQC::Freq2() const
{
    QVariant qax_result = property("Freq2");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetFreq2(double value){ setProperty("Freq2", QVariant(value)); }

inline double DAQC::Frequence() const
{
    QVariant qax_result = property("Frequence");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetFrequence(double value){ setProperty("Frequence", QVariant(value)); }

inline int DAQC::GetDscStop() const
{
    QVariant qax_result = property("GetDscStop");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetGetDscStop(int value){ setProperty("GetDscStop", QVariant(value)); }

inline int DAQC::ImageProcess() const
{
    QVariant qax_result = property("ImageProcess");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetImageProcess(int value){ setProperty("ImageProcess", QVariant(value)); }

inline int DAQC::LavgRelation() const
{
    QVariant qax_result = property("LavgRelation");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetLavgRelation(int value){ setProperty("LavgRelation", QVariant(value)); }

inline int DAQC::LineDensity() const
{
    QVariant qax_result = property("LineDensity");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetLineDensity(int value){ setProperty("LineDensity", QVariant(value)); }

inline int DAQC::MGain() const
{
    QVariant qax_result = property("MGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetMGain(int value){ setProperty("MGain", QVariant(value)); }

inline double DAQC::MSpeed() const
{
    QVariant qax_result = property("MSpeed");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetMSpeed(double value){ setProperty("MSpeed", QVariant(value)); }

inline int DAQC::PWDCompress() const
{
    QVariant qax_result = property("PWDCompress");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetPWDCompress(int value){ setProperty("PWDCompress", QVariant(value)); }

inline double DAQC::PWDCorrectionAngle() const
{
    QVariant qax_result = property("PWDCorrectionAngle");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetPWDCorrectionAngle(double value){ setProperty("PWDCorrectionAngle", QVariant(value)); }

inline double DAQC::PWDgateSize() const
{
    QVariant qax_result = property("PWDgateSize");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetPWDgateSize(double value){ setProperty("PWDgateSize", QVariant(value)); }

inline double DAQC::PWDsampleDepth() const
{
    QVariant qax_result = property("PWDsampleDepth");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetPWDsampleDepth(double value){ setProperty("PWDsampleDepth", QVariant(value)); }

inline int DAQC::PWDstartPos() const
{
    QVariant qax_result = property("PWDstartPos");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetPWDstartPos(int value){ setProperty("PWDstartPos", QVariant(value)); }

inline int DAQC::PersistenceColor() const
{
    QVariant qax_result = property("PersistenceColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetPersistenceColor(int value){ setProperty("PersistenceColor", QVariant(value)); }

inline int DAQC::ProbePOS() const
{
    QVariant qax_result = property("ProbePOS");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetProbePOS(int value){ setProperty("ProbePOS", QVariant(value)); }

inline int DAQC::ProbeSEL() const
{
    QVariant qax_result = property("ProbeSEL");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetProbeSEL(int value){ setProperty("ProbeSEL", QVariant(value)); }

inline int DAQC::PwdGain() const
{
    QVariant qax_result = property("PwdGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetPwdGain(int value){ setProperty("PwdGain", QVariant(value)); }

inline bool DAQC::PwdInvert() const
{
    QVariant qax_result = property("PwdInvert");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DAQC::SetPwdInvert(bool value){ setProperty("PwdInvert", QVariant(value)); }

inline int DAQC::PwrGain() const
{
    QVariant qax_result = property("PwrGain");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetPwrGain(int value){ setProperty("PwrGain", QVariant(value)); }

inline int DAQC::PwrMode() const
{
    QVariant qax_result = property("PwrMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetPwrMode(int value){ setProperty("PwrMode", QVariant(value)); }

inline int DAQC::ROISwingAngle() const
{
    QVariant qax_result = property("ROISwingAngle");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetROISwingAngle(int value){ setProperty("ROISwingAngle", QVariant(value)); }

inline double DAQC::Radium() const
{
    QVariant qax_result = property("Radium");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::SetRadium(double value){ setProperty("Radium", QVariant(value)); }

inline int DAQC::ResetProbe() const
{
    QVariant qax_result = property("ResetProbe");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetResetProbe(int value){ setProperty("ResetProbe", QVariant(value)); }

inline int DAQC::ScanLine() const
{
    QVariant qax_result = property("ScanLine");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetScanLine(int value){ setProperty("ScanLine", QVariant(value)); }

inline int DAQC::THI() const
{
    QVariant qax_result = property("THI");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetTHI(int value){ setProperty("THI", QVariant(value)); }

inline int DAQC::ZoomImg() const
{
    QVariant qax_result = property("ZoomImg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::SetZoomImg(int value){ setProperty("ZoomImg", QVariant(value)); }

inline int DAQC::bFocusLch() const
{
    QVariant qax_result = property("bFocusLch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setBFocusLch(int value){ setProperty("bFocusLch", QVariant(value)); }

inline int DAQC::cAutoTrace() const
{
    QVariant qax_result = property("cAutoTrace");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setCAutoTrace(int value){ setProperty("cAutoTrace", QVariant(value)); }

inline int DAQC::cFocusLch() const
{
    QVariant qax_result = property("cFocusLch");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setCFocusLch(int value){ setProperty("cFocusLch", QVariant(value)); }

inline double DAQC::espin() const
{
    QVariant qax_result = property("espin");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void DAQC::setEspin(double value){ setProperty("espin", QVariant(value)); }

inline int DAQC::imgExtend() const
{
    QVariant qax_result = property("imgExtend");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setImgExtend(int value){ setProperty("imgExtend", QVariant(value)); }

inline int DAQC::posneg() const
{
    QVariant qax_result = property("posneg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setPosneg(int value){ setProperty("posneg", QVariant(value)); }

inline int DAQC::pwifBuffms() const
{
    QVariant qax_result = property("pwifBuffms");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setPwifBuffms(int value){ setProperty("pwifBuffms", QVariant(value)); }

inline int DAQC::scanFeature() const
{
    QVariant qax_result = property("scanFeature");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setScanFeature(int value){ setProperty("scanFeature", QVariant(value)); }

inline int DAQC::scanMode() const
{
    QVariant qax_result = property("scanMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setScanMode(int value){ setProperty("scanMode", QVariant(value)); }

inline int DAQC::smooth() const
{
    QVariant qax_result = property("smooth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void DAQC::setSmooth(int value){ setProperty("smooth", QVariant(value)); }

inline void DAQC::AboutBox()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void DAQC::FacuiParams(int pXh, int vAcui)
{
    void *_a[] = {0, (void*)&pXh, (void*)&vAcui};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline void DAQC::GetColorDopplerROI(int startPos, int endPos, int startDepth, int endDepth)
{
    void *_a[] = {0, (void*)&startPos, (void*)&endPos, (void*)&startDepth, (void*)&endDepth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline int DAQC::GetDepthSf()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int DAQC::GetDscDIB()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline double DAQC::GetFPS()
{
    double qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline double DAQC::GetParameter(int id)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int DAQC::GetProbeInfo(int id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline bool DAQC::GetRegionPhysicalDelta(double& pDeltaX, double& pDeltaY)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDeltaX, (void*)&pDeltaY};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline void DAQC::GetTGCPositions(int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8)
{
    void *_a[] = {0, (void*)&p1, (void*)&p2, (void*)&p3, (void*)&p4, (void*)&p5, (void*)&p6, (void*)&p7, (void*)&p8};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline int DAQC::GetpBMIInfo()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int DAQC::GetpDIBits()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int DAQC::Init(int inum)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&inum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int DAQC::Mode2B()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int DAQC::Mode4B(int wid)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&wid};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline void DAQC::MoveColorROI(int LeftRight, int UpDown)
{
    void *_a[] = {0, (void*)&LeftRight, (void*)&UpDown};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void DAQC::MoveROIColor(int x, int y)
{
    void *_a[] = {0, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline int DAQC::Palette(int colorID, int bright, int ts)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&colorID, (void*)&bright, (void*)&ts};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int DAQC::RealtimeEn(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline void DAQC::SetColorDopplerROI(int startPos, int endPos, int startDepth, int endDepth)
{
    void *_a[] = {0, (void*)&startPos, (void*)&endPos, (void*)&startDepth, (void*)&endDepth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
}

inline int DAQC::SetFlipH(int isFlip)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&isFlip};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
    return qax_result;
}

inline int DAQC::SetFlipV(int isFlip)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&isFlip};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
    return qax_result;
}

inline int DAQC::SetPwdAutoTrace(int nAuto)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nAuto};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
    return qax_result;
}

inline void DAQC::SetTGCPositions(int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8)
{
    void *_a[] = {0, (void*)&p1, (void*)&p2, (void*)&p3, (void*)&p4, (void*)&p5, (void*)&p6, (void*)&p7, (void*)&p8};
    qt_metacall(QMetaObject::InvokeMetaMethod, 114, _a);
}

inline int DAQC::SetiClear(int id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 117, _a);
    return qax_result;
}

inline void DAQC::ZoomColorROI(int xDirection, int yDirection)
{
    void *_a[] = {0, (void*)&xDirection, (void*)&yDirection};
    qt_metacall(QMetaObject::InvokeMetaMethod, 118, _a);
}

inline void DAQC::fProbeType(int pbPort, int pbType)
{
    void *_a[] = {0, (void*)&pbPort, (void*)&pbType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 119, _a);
}

inline void DAQC::saveScuInitPara()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 120, _a);
}

inline bool DAQC::start()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 131, _a);
    return qax_result;
}

inline void DAQC::stop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 132, _a);
}

inline void DAQC::wifiEWM(const QString& fptStr, const QString& htpStr)
{
    void *_a[] = {0, (void*)&fptStr, (void*)&htpStr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 133, _a);
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<DAQCLib::_DDAQC, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<DAQCLib::_DDAQC*>(t)->DAQCLib::_DDAQC::~_DDAQC();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) DAQCLib::_DDAQC;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const DAQCLib::_DDAQC*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<DAQCLib::_DDAQC*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<DAQCLib::DAQC, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<DAQCLib::DAQC*>(t)->DAQCLib::DAQC::~DAQC();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) DAQCLib::DAQC;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const DAQCLib::DAQC*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<DAQCLib::DAQC*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

